with all_tables as (select playerid, yearid from batting group by playerid, yearid union select playerid, yearid from fielding group by playerid, yearid union select playerid, yearid from pitching group by playerid, yearid), result as (select playerid, count(distinct(yearid)) as num_seasons from all_tables group by playerid) select r.playerid, coalesce(p.namefirst,'') as firstname, coalesce(p.namelast,'') as lastname, coalesce(birthyear || '-' || lpad(birthmonth::text,2,'0') || '-' || lpad(birthday::text,2,'0'),'') as date_of_birth, r.num_seasons from result r join people p on r.playerid = p.playerid order by r.num_seasons desc, r.playerid asc;
with temp2 as(select playerid,yearid from batting union (select playerid,yearid from pitching union (select playerid,yearid from fielding) ) )select t.playerid, COALESCE(t.namefirst,'') as firstname, COALESCE(t.namelast,'') as lastname ,COALESCE(cast(to_date("birthyear"||' '||"birthmonth"||' '||"birthday",'YYYY-MM-DD') as character varying(255)),'') as date_of_birth,count( DISTINCT temp2.yearid)  as num_seasons  from people t join  temp2 on t.playerid=temp2.playerid group by t.playerid,firstname,lastname,date_of_birth order by num_seasons desc,playerid asc,firstname asc,lastname asc,date_of_birth asc;
with all_tables as (select playerid, yearid from batting group by playerid, yearid union select playerid, yearid from fielding group by playerid, yearid union select playerid, yearid from pitching group by playerid, yearid), result as (select playerid, count(distinct(yearid)) as num_seasons from all_tables group by playerid) select r.playerid, coalesce(p.namefirst,'') as firstname, coalesce(p.namelast,'') as lastname, coalesce(birthyear || '-' || lpad(birthmonth::text,2,'0') || '-' || lpad(birthday::text,2,'0'),'') as date_of_birth, r.num_seasons from result r join people p on r.playerid = p.playerid order by r.num_seasons desc, r.playerid asc;
WITH t1 (playerId, yearID) AS (SELECT playerID, yearID FROM Batting UNION SELECT playerID, yearID FROM Pitching UNION SELECT playerID, yearID FROM Fielding), t2 (playerID, num_seasons) AS (SELECT playerID, COUNT(DISTINCT yearID) as num_seasons FROM t1 GROUP BY playerID) SELECT t2.playerID, COALESCE(nameFirst,'') as firstname, COALESCE(nameLast,'') as lastname, COALESCE(lpad(birthYear::text, 4, '0')||'-'||lpad(birthmonth::text, 2, '0')||'-'||lpad(birthDay::text, 2, '0'),'') AS date_of_birth, num_seasons FROM t2 LEFT JOIN People ON t2.playerID=People.playerID ORDER BY num_seasons DESC, playerID ASC, firstname ASC, lastname ASC, date_of_birth ASC;
with all_tables as (select playerid, yearid from batting group by playerid, yearid union select playerid, yearid from fielding group by playerid, yearid union select playerid, yearid from pitching group by playerid, yearid), result as (select playerid, count(distinct(yearid)) as num_seasons from all_tables group by playerid) select r.playerid, coalesce(p.namefirst,'') as firstname, coalesce(p.namelast,'') as lastname, coalesce(birthyear || '-' || lpad(birthmonth::text,2,'0') || '-' || lpad(birthday::text,2,'0'),'') as date_of_birth, r.num_seasons from result r join people p on r.playerid = p.playerid order by r.num_seasons desc, r.playerid asc;
WITH sub1 as (SELECT playerid, yearid FROM batting), sub2 as (SELECT playerid, yearid FROM pitching), sub3 as (SELECT playerid, yearid FROM fielding), t as (SELECT * FROM sub1 UNION SELECT * FROM sub2 UNION SELECT * FROM sub3) SELECT t.playerid, CASE WHEN namefirst IS NULL THEN '' ELSE namefirst END AS firstname, CASE WHEN namelast IS NULL THEN '' ELSE namelast END AS lastname, CASE WHEN birthyear IS NOT NULL AND birthmonth IS NOT NULL AND birthday IS NOT NULL THEN birthyear||'-'||lpad(birthmonth::text, 2, '0')||'-'||lpad(birthday::text, 2, '0') ELSE '' END AS date_of_birth, COUNT(t.yearid) as num_seasons FROM t JOIN People ON t.playerid = people.playerid GROUP BY t.playerid, people.namefirst, people.namelast, date_of_birth ORDER BY num_seasons DESC, t.playerid ASC, people.namefirst ASC, people.namelast ASC, date_of_birth;
with all_tables as (select playerid, yearid from batting group by playerid, yearid union select playerid, yearid from fielding group by playerid, yearid union select playerid, yearid from pitching group by playerid, yearid), result as (select playerid, count(distinct(yearid)) as num_seasons from all_tables group by playerid) select r.playerid, coalesce(p.namefirst,'') as firstname, coalesce(p.namelast,'') as lastname, coalesce(birthyear || '-' || lpad(birthmonth::text,2,'0') || '-' || lpad(birthday::text,2,'0'),'') as date_of_birth, r.num_seasons from result r join people p on r.playerid = p.playerid order by r.num_seasons desc, r.playerid asc;
with t as (select playerID, count(yearID) as num_seasons from (select playerID, yearID from Batting union select playerID, yearID from pitching union select playerID, yearID from fielding) as sq group by playerID) select t.playerID, COALESCE(namefirst, '') as firstname, COALESCE(namelast, '') as lastname, COALESCE(People.birthyear || '-' || (case when (People.birthmonth > 9) Then '' else '0' end) || People.birthmonth || '-' || (case when (People.birthday > 9) Then '' else '0' end) || People.birthday, '') as date_of_birth, num_seasons from t, People where People.playerID=t.playerID order by num_seasons desc, playerID, firstname, lastname, date_of_birth;
with all_tables as (select playerid, yearid from batting group by playerid, yearid union select playerid, yearid from fielding group by playerid, yearid union select playerid, yearid from pitching group by playerid, yearid), result as (select playerid, count(distinct(yearid)) as num_seasons from all_tables group by playerid) select r.playerid, coalesce(p.namefirst,'') as firstname, coalesce(p.namelast,'') as lastname, coalesce(birthyear || '-' || lpad(birthmonth::text,2,'0') || '-' || lpad(birthday::text,2,'0'),'') as date_of_birth, r.num_seasons from result r join people p on r.playerid = p.playerid order by r.num_seasons desc, r.playerid asc;
WITH All_Seasons AS (SELECT playerid, COUNT(DISTINCT yearID) AS num_seasons FROM (SELECT playerID, yearID FROM Batting UNION SELECT playerID, yearID FROM Pitching UNION SELECT playerID, yearID FROM Fielding) AS Years GROUP BY playerid), Births AS (SELECT playerid, CASE WHEN birthYear IS NOT NULL THEN '' || birthYear ELSE NULL END AS birthYear1, CASE WHEN birthMonth IS NOT NULL AND birthMonth < 10 THEN '0' || birthMonth WHEN birthMonth IS NOT NULL AND birthMonth >= 10 THEN '' || birthMonth ELSE NULL END AS birthMonth1, CASE WHEN birthDay IS NOT NULL AND birthDay < 10 THEN '0' || birthDay WHEN birthDay IS NOT NULL AND birthDay >= 10 THEN '' || birthDay ELSE NULL END AS birthDay1 FROM People GROUP BY playerid, birthYear, birthMonth, birthDay) SELECT People.playerID, CASE WHEN nameFirst IS NOT NULL THEN nameFirst ELSE '' END AS firstname, CASE WHEN nameLast IS NOT NULL THEN nameLast ELSE '' END AS lastname, CASE WHEN birthYear1 IS NOT NULL AND birthMonth1 IS NOT NULL AND birthDay1 IS NOT NULL THEN birthYear1 || '-' || birthMonth1 || '-' || birthDay1 ELSE '' END AS date_of_birth, num_seasons FROM People, All_Seasons, Births WHERE People.playerID = All_Seasons.playerID AND People.playerID = Births.playerID GROUP BY People.playerid, firstname, lastname, date_of_birth, num_seasons ORDER BY num_seasons DESC, People.playerID ASC, firstname ASC, lastname ASC, date_of_birth ASC;
with all_tables as (select playerid, yearid from batting group by playerid, yearid union select playerid, yearid from fielding group by playerid, yearid union select playerid, yearid from pitching group by playerid, yearid), result as (select playerid, count(distinct(yearid)) as num_seasons from all_tables group by playerid) select r.playerid, coalesce(p.namefirst,'') as firstname, coalesce(p.namelast,'') as lastname, coalesce(birthyear || '-' || lpad(birthmonth::text,2,'0') || '-' || lpad(birthday::text,2,'0'),'') as date_of_birth, r.num_seasons from result r join people p on r.playerid = p.playerid order by r.num_seasons desc, r.playerid asc;
SELECT playerid, firstname, lastname, date_of_birth, num_seasons FROM( SELECT playerid, COUNT(playerid) AS num_seasons FROM ( SELECT playerid, yearid FROM batting UNION SELECT playerid, yearid FROM pitching UNION SELECT playerid, yearid FROM fielding ) AS playerRecord GROUP BY playerid ) AS players NATURAL JOIN( SELECT playerid, COALESCE(nameFirst, '') AS firstname, COALESCE(nameLast, '') AS lastname, COALESCE(lpad(birthyear::text, 4, '0') || '-' || lpad(birthmonth::text, 2, '0') || '-' || lpad(birthday::text, 2, '0'), '') AS date_of_birth FROM people ) AS people ORDER BY num_seasons DESC, playerid ASC, firstname ASC, lastname ASC;
with all_tables as (select playerid, yearid from batting group by playerid, yearid union select playerid, yearid from fielding group by playerid, yearid union select playerid, yearid from pitching group by playerid, yearid), result as (select playerid, count(distinct(yearid)) as num_seasons from all_tables group by playerid) select r.playerid, coalesce(p.namefirst,'') as firstname, coalesce(p.namelast,'') as lastname, coalesce(birthyear || '-' || lpad(birthmonth::text,2,'0') || '-' || lpad(birthday::text,2,'0'),'') as date_of_birth, r.num_seasons from result r join people p on r.playerid = p.playerid order by r.num_seasons desc, r.playerid asc;
SELECT People.playerID as playerid, coalesce(nameFirst,'') as firstname, coalesce(nameLast,'') as lastname, (CASE WHEN coalesce(birthYear,0)=0 OR coalesce(birthMonth,0)=0 OR coalesce(birthDay,0)=0 THEN '' ELSE CAST(birthYear AS text)||'-'||lpad(birthMonth::text, 2, '0')||'-'||lpad(birthDay::text, 2, '0') END) AS date_of_birth, COUNT(People.playerID) AS num_seasons FROM People JOIN (SELECT playerID,yearID FROM Batting UNION SELECT playerID,yearID FROM Fielding UNION SELECT playerID,yearID FROM Pitching) AS Aux ON People.playerID = Aux.playerID GROUP BY People.playerID,firstname,lastname,birthYear,birthMonth,birthDay ORDER BY num_seasons DESC,playerid ASC,firstname ASC, lastname ASC, date_of_birth ASC;
with all_tables as (select playerid, yearid from batting group by playerid, yearid union select playerid, yearid from fielding group by playerid, yearid union select playerid, yearid from pitching group by playerid, yearid), result as (select playerid, count(distinct(yearid)) as num_seasons from all_tables group by playerid) select r.playerid, coalesce(p.namefirst,'') as firstname, coalesce(p.namelast,'') as lastname, coalesce(birthyear || '-' || lpad(birthmonth::text,2,'0') || '-' || lpad(birthday::text,2,'0'),'') as date_of_birth, r.num_seasons from result r join people p on r.playerid = p.playerid order by r.num_seasons desc, r.playerid asc;
WITH table1 AS ( SELECT DISTINCT playerid, yearid FROM batting UNION SELECT DISTINCT playerid, yearid FROM pitching UNION SELECT DISTINCT playerid, yearid FROM fielding ), table3 AS ( SELECT playerid, COUNT(*) AS num_seasons FROM table1 GROUP BY playerid ) SELECT table3.playerid AS playerid, COALESCE(nameFirst, '') AS firstname, COALESCE(nameLast, '') AS lastname, (COALESCE( CASE WHEN birthYear IS NULL OR birthMonth IS NULL OR birthDay IS NULL THEN '' ELSE birthYear || '-' || ( CASE WHEN birthMonth < 10 THEN '0' || CAST(birthMonth AS char(1)) ELSE CAST(birthMonth AS char(2)) END) || '-' || ( CASE WHEN birthDay < 10 THEN '0' || CAST(birthDay AS char(1)) ELSE CAST(birthDay AS char(2)) END) END, '')) AS date_of_birth, num_seasons FROM table3 INNER JOIN people ON people.playerid = table3.playerid ORDER BY num_seasons DESC, playerid, firstname, lastname, date_of_birth;
with all_tables as (select playerid, yearid from batting group by playerid, yearid union select playerid, yearid from fielding group by playerid, yearid union select playerid, yearid from pitching group by playerid, yearid), result as (select playerid, count(distinct(yearid)) as num_seasons from all_tables group by playerid) select r.playerid, coalesce(p.namefirst,'') as firstname, coalesce(p.namelast,'') as lastname, coalesce(birthyear || '-' || lpad(birthmonth::text,2,'0') || '-' || lpad(birthday::text,2,'0'),'') as date_of_birth, r.num_seasons from result r join people p on r.playerid = p.playerid order by r.num_seasons desc, r.playerid asc;
WITH num_seasons_table AS ( SELECT playerid, COUNT(*) AS num_seasons FROM ( SELECT DISTINCT playerid, yearid FROM batting UNION SELECT DISTINCT playerid, yearid FROM pitching UNION SELECT DISTINCT playerid, yearid FROM fielding ) AS t GROUP BY playerid ) SELECT people.playerid AS playerid, COALESCE(nameFirst,'') AS firstname, COALESCE(nameLast,'') AS lastname, COALESCE(birthyear || '-' || LPAD(birthmonth::text, 2, '0') || '-' || LPAD(birthday::text, 2, '0'), '') AS date_of_birth, num_seasons FROM people JOIN num_seasons_table ON people.playerid = num_seasons_table.playerid ORDER BY num_seasons DESC, playerid ASC, firstname ASC, lastname ASC, date_of_birth ASC;
with all_tables as (select playerid, yearid from batting group by playerid, yearid union select playerid, yearid from fielding group by playerid, yearid union select playerid, yearid from pitching group by playerid, yearid), result as (select playerid, count(distinct(yearid)) as num_seasons from all_tables group by playerid) select r.playerid, coalesce(p.namefirst,'') as firstname, coalesce(p.namelast,'') as lastname, coalesce(birthyear || '-' || lpad(birthmonth::text,2,'0') || '-' || lpad(birthday::text,2,'0'),'') as date_of_birth, r.num_seasons from result r join people p on r.playerid = p.playerid order by r.num_seasons desc, r.playerid asc;
with t1(playerID, yearID) as (select distinct playerID, yearID from batting), t2(playerID, yearID) as (select distinct playerID, yearID from pitching), t3(playerID, yearID) as (select distinct playerID, yearID from fielding) select playerID as playerid, (case when nameFirst is null then '' else nameFirst end) as firstname, (case when nameLast is null then '' else nameLast end) as lastname, (case when (birthYear is null or birthMonth is null or birthDay is null) then '' else birthYear::text||'-'||lpad(birthMonth::text, 2, '0')||'-'||lpad(birthDay::text, 2, '0') end) as date_of_birth, count(yearID) as num_seasons from (people join ((select distinct playerID, yearID from batting) union ((select distinct playerID, yearID from pitching) union (select distinct playerID, yearID from fielding))) as t using (playerID)) group by playerID, firstname, lastname, date_of_birth order by num_seasons desc, playerid asc, firstname asc, lastname asc, date_of_birth asc;
with all_tables as (select playerid, yearid from batting group by playerid, yearid union select playerid, yearid from fielding group by playerid, yearid union select playerid, yearid from pitching group by playerid, yearid), result as (select playerid, count(distinct(yearid)) as num_seasons from all_tables group by playerid) select r.playerid, coalesce(p.namefirst,'') as firstname, coalesce(p.namelast,'') as lastname, coalesce(birthyear || '-' || lpad(birthmonth::text,2,'0') || '-' || lpad(birthday::text,2,'0'),'') as date_of_birth, r.num_seasons from result r join people p on r.playerid = p.playerid order by r.num_seasons desc, r.playerid asc;
WITH t AS (SELECT DISTINCT playerID, yearID FROM Batting  UNION SELECT DISTINCT playerID, yearID FROM Pitching  UNION SELECT DISTINCT playerID, yearID FROM Pitching) SELECT People.playerID AS playerid, coalesce(People.nameFirst,'') AS firstname, coalesce(People.nameLast,'') AS lastname, CASE WHEN People.birthYear IS NOT NULL AND People.birthMonth IS NOT NULL AND People.birthDay IS NOT NULL THEN lpad(birthYear::text, 4, '0')||'-'||lpad(birthMonth::text, 2, '0')||'-'||lpad(People.birthDay::text, 2, '0') ELSE '' END AS date_of_birth, COUNT(t.yearID) AS num_seasons FROM (People JOIN t ON (People.playerID = t.playerID)) GROUP BY People.playerID, People.nameFirst, People.nameLast, CASE WHEN People.birthYear IS NOT NULL AND People.birthMonth IS NOT NULL AND People.birthDay IS NOT NULL THEN lpad(birthYear::text, 4, '0')||'-'||lpad(birthMonth::text, 2, '0')||'-'||lpad(People.birthDay::text, 2, '0') ELSE '' END ORDER BY COUNT(t.yearID)  DESC, People.playerID, People.nameFirst, People.nameLast, date_of_birth;
with all_tables as (select playerid, yearid from batting group by playerid, yearid union select playerid, yearid from fielding group by playerid, yearid union select playerid, yearid from pitching group by playerid, yearid), result as (select playerid, count(distinct(yearid)) as num_seasons from all_tables group by playerid) select r.playerid, coalesce(p.namefirst,'') as firstname, coalesce(p.namelast,'') as lastname, coalesce(birthyear || '-' || lpad(birthmonth::text,2,'0') || '-' || lpad(birthday::text,2,'0'),'') as date_of_birth, r.num_seasons from result r join people p on r.playerid = p.playerid order by r.num_seasons desc, r.playerid asc;
select playerid, coalesce(namefirst,'') as firstname, coalesce(namelast,'') as lastname, coalesce(birthyear::text ||'-'|| lpad(birthmonth::text,2,'0') ||'-'|| lpad(birthday::text,2,'0'),'') as date_of_birth, count(distinct yearid) as num_seasons from people natural join ( select playerid, yearid from batting union select playerid, yearid from pitching union select playerid, yearid from fielding ) as seasons group by playerid, firstname, lastname, date_of_birth order by num_seasons desc, playerid asc, firstname asc, lastname asc, date_of_birth asc ;
with all_tables as (select playerid, yearid from batting group by playerid, yearid union select playerid, yearid from fielding group by playerid, yearid union select playerid, yearid from pitching group by playerid, yearid), result as (select playerid, count(distinct(yearid)) as num_seasons from all_tables group by playerid) select r.playerid, coalesce(p.namefirst,'') as firstname, coalesce(p.namelast,'') as lastname, coalesce(birthyear || '-' || lpad(birthmonth::text,2,'0') || '-' || lpad(birthday::text,2,'0'),'') as date_of_birth, r.num_seasons from result r join people p on r.playerid = p.playerid order by r.num_seasons desc, r.playerid asc;
with gra as((SELECT playerid,yearid from batting) union (SELECT playerid,yearid from fielding) union (SELECT playerid,yearid from pitching)) select t.playerid,COALESCE(nameFirst,'') as firstname,COALESCE(nameLast,'') as lastname, CASE when birthYear IS NULL OR birthDay IS NULL OR birthMonth IS NULL then '' ELSE birthyear || '-' || lpad(birthmonth::text, 2, '0') || '-'|| lpad(birthday::text, 2, '0') end as date_of_birth , count(*) as num_seasons from (select distinct playerid,yearid from gra) AS t,people p where p.playerid=t.playerid group by t.playerid,firstname,lastname,birthday,birthmonth,birthyear order by count(*) desc, t.playerid, firstname,lastname,date_of_birth;
with all_tables as (select playerid, yearid from batting group by playerid, yearid union select playerid, yearid from fielding group by playerid, yearid union select playerid, yearid from pitching group by playerid, yearid), result as (select playerid, count(distinct(yearid)) as num_seasons from all_tables group by playerid) select r.playerid, coalesce(p.namefirst,'') as firstname, coalesce(p.namelast,'') as lastname, coalesce(birthyear || '-' || lpad(birthmonth::text,2,'0') || '-' || lpad(birthday::text,2,'0'),'') as date_of_birth, r.num_seasons from result r join people p on r.playerid = p.playerid order by r.num_seasons desc, r.playerid asc;
WITH newTable AS ( SELECT DISTINCT playerid, yearid FROM Batting UNION SELECT DISTINCT playerid, yearid FROM Pitching UNION SELECT DISTINCT playerid, yearid FROM Fielding ) SELECT newTable.playerid, COALESCE(nameFirst,'') AS firstname, COALESCE(nameLast,'') AS lastname, COALESCE(lpad(birthYear::text, 4, '0') || '-' || lpad(birthMonth::text, 2, '0') || '-' || lpad(birthDay::text, 2, '0'), '') AS date_of_birth, COUNT(DISTINCT yearid) AS num_seasons FROM newTable, People WHERE newTable.playerid=People.playerid GROUP BY newTable.playerid, firstname, lastname, date_of_birth ORDER BY num_seasons DESC, playerid ASC, firstname ASC, lastname ASC, date_of_birth ASC;
with all_tables as (select playerid, yearid from batting group by playerid, yearid union select playerid, yearid from fielding group by playerid, yearid union select playerid, yearid from pitching group by playerid, yearid), result as (select playerid, count(distinct(yearid)) as num_seasons from all_tables group by playerid) select r.playerid, coalesce(p.namefirst,'') as firstname, coalesce(p.namelast,'') as lastname, coalesce(birthyear || '-' || lpad(birthmonth::text,2,'0') || '-' || lpad(birthday::text,2,'0'),'') as date_of_birth, r.num_seasons from result r join people p on r.playerid = p.playerid order by r.num_seasons desc, r.playerid asc;
drop view if exits p1; create temp view p1 as select playerid, count(*) as num_seasons from ((select distinct playerid, yearid from batting) union (select distinct playerid, yearid from pitching) union (select distinct playerid, yearid from fielding)) as t group by playerid; select people.playerid, coalesce(namefirst, '') as firstname, coalesce(namelast, '') as lastname, (case when birthyear is NULL or birthmonth is null or birthday is null then '' else birthyear || '-' || lpad(birthmonth::text,2,'0') || '-' || lpad(birthday::text,2,'0') end) as date_of_birth, num_seasons from people join p1 on p1.playerid = people.playerid order by num_seasons desc, p1.playerid asc, coalesce(namefirst, '') asc, coalesce(namelast, '') asc, date_of_birth asc; drop view p1;
with all_tables as (select playerid, yearid from batting group by playerid, yearid union select playerid, yearid from fielding group by playerid, yearid union select playerid, yearid from pitching group by playerid, yearid), result as (select playerid, count(distinct(yearid)) as num_seasons from all_tables group by playerid) select r.playerid, coalesce(p.namefirst,'') as firstname, coalesce(p.namelast,'') as lastname, coalesce(birthyear || '-' || lpad(birthmonth::text,2,'0') || '-' || lpad(birthday::text,2,'0'),'') as date_of_birth, r.num_seasons from result r join people p on r.playerid = p.playerid order by r.num_seasons desc, r.playerid asc;
SELECT t1.playerID as playerid, COALESCE(people.nameFirst, '') AS firstname, COALESCE(people.nameLast, '') AS lastname, (CASE WHEN people.birthYear IS NULL OR people.birthMonth IS NULL OR people.birthDay IS NULL THEN '' ELSE people.birthYear || '-' || lpad(people.birthMonth::text, 2, '0') || '-' || lpad(people.birthDay::text, 2, '0') END) AS date_of_birth, COUNT(t1.playerID) AS num_seasons FROM (SELECT batting.playerID AS playerID, batting.yearID AS yearID FROM batting UNION SELECT pitching.playerID AS playerID, pitching.yearID AS yearID FROM pitching UNION SELECT fielding.playerID AS playerID, fielding.yearID AS yearID FROM fielding GROUP BY playerID, yearID) AS t1, people WHERE people.playerID = t1.playerID GROUP BY t1.playerID, people.nameFirst, people.nameLast, people.birthYear, people.birthMonth, people.birthDay ORDER BY num_seasons DESC, playerid ASC, firstname ASC, lastname ASC, date_of_birth ASC;
